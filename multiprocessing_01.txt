Script started on 2023-02-02 12:41:17+01:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="80" LINES="24"]
[?2004h]0;alumno@aula443: ~[01;32malumno@aula443[00m:[01;34m~[00m$ script multiprocessing.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[14Pls -al .ssh/unzip Descargas/ssh.zip[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7Prm -r .ssh .git*[8Pgit pushls[Kmv /tmp/GIT-y-multiprocessing/* .[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7Pcd  GIT-y-multiprocessing/[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit clone git@github.com:AnaLing/GIT-y-multiprocessing.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[27Pmv GIT-y-multiprocessing/ /tmp/.ssh/ .[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[21Prm -r .ssh/[6Pcd ..[3Plscd .ssh/.[Kmv .ssh/ ../[6Pls -algit statusls[Kgit remote -v[5Ppushllshcommit -m "Se suben los archivos *py"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Pnfig --global user.name "AnaLing"email "analingf@ucm.es"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7Pmmit -m "Se suben los archivos *py"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Pnfig --global user.name "AnaLing"mail "analingf@ucm.es"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[6Pmmit -m "Se suben los archivos *py"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cadd 0_procesos.py 1_procesos.py 2_procesos.py 3_procesos.py 4_procesos.py [A]0;alumno@aula443: ~[01;32malumno@aula443[00m:[01;34m~[00m$ [Cedit 4_procesos.py[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ctouch[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgedit 3_procesos.pytouch[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgedit 2_procesos.pytouch[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgedit 1_procesos.pytouch[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgedit 0_procesos.pytouch[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd GIT-y-multiprocessing[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit clone git@github.com:AnaLing/GIT-y-multiprocessing.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Crm -r .ssh/ .git*[Kgit add multiprocessing.txt [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cl[Kpwdscript multiprocessing.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit push[Kcommit -m "Se suben los archivos"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cadd 0_procesos.py 1_procesos.py 2_procesos.py 3_procesos.py 4_procesos.py[A]0;alumno@aula443: ~[01;32malumno@aula443[00m:[01;34m~[00m$ [C[C[C[Cpush[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccommit -m "Se ha subido este archivo"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[19Padd 0_procesos.py commit -m 'Se sube el fichero'"Se sube el fichero" git push[K[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[13Padd 0_procesos.py[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kmv ../*py .ls[Kcd prpa-practica1/git clone git@github.com:fermoner/prpa-practica1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[28Punzip Descargas/ssh.zip [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[13Prm -r .ssh/cd[K ..git clone git@github.com:fermoner/prpa-practica1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd .ssh[Kgit clone git@github.com:fermoner/prpa-practica1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd ..[Kgit clone git@github.com:fermoner/prpa-practica1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd .ssh[K[2Pls -a[Kgit clone git@github.com:fermoner/prpa-practica1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls -a[Kgit clone git@github.com:fermoner/prpa-practica1.git[6P23-1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Config --global user.email "inigoiri@ucm.es"[9Pname "InigoID"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd ssh[K[4Plscd Descargas/Descargas/ssh[3P/Descargas/sshgit config --global user.email "inigoiri@ucm.es"[9Pname "InigoID"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Clone https://github.com/fermoner/prpa23-1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[6Phttps://github.com/fermoner/prpa23-1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Pgit@github.com:fermoner/prpa23-1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[9Ppython3 gitymultiprocessing.py [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[15Pcd /home/alumno/script multiprocessing.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cclear[Kpython3 gitymultiprocessing.py[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cwd[Kcd /home/alumno[Kprint ("fin").start() q.start()q = Process(target=f)[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[28@if __name__ == "__main__":; p[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Csleep(random())[Kprint ("hola", i)for i in range(5):[10Pdef f():from multiprocessing import Process[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"""[Khttps://docs.python.org/3.6/library/multiprocessing.html[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[26PDocumentaciÃƒÂ³n multiprocessing[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"""[Kfrom random import random[3Ptime import sleep[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./a.out[Kg++ pos_apariciones.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./a.out[Kg++ pos_apariciones.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./a.out[Kg++ pos_apariciones.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./a.out[Kls[K/.aoutg++ pos_apariciones.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kg++ pos_apariciones.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C/.aout[K[4Pls./a.outg++ pos_apariciones.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./a.out[Kg++ pos_apariciones.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./a.out[Kg++ pos_apariciones.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./a.out[Kfrom time import sleeprandom import random[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"""[KDocumentaciÃƒÂ³n multiprocessing[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttps://docs.python.org/3.6/library/multiprocessing.html[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"""[Kfrom multiprocessing import Process[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cdef f():[Kfor i in range(5):[1Pprint ("hola", i)[2Psleep(random())if __name__ == "__main__":; p = Process(target=f)[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[28Pq[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Pp.start() q.start()[6Print ("fin")cd[K /home/alumnopwd[Kython3 gitymultiprocessing.py[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cclear[Kscript multiprocessing.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[10Pcd /home/alumno/python3 gitymultiprocessing.py [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit git@github.com:fermoner/prpa23-1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttps://github.com/fermoner/prpa23-1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cclone https://github.com/fermoner/prpa23-1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[11Ponfig --global user.name "InigoID"email "inigoiri@ucm.es"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C/Descargas/ssh[Kcd /Descargas/ssh[5PDescargasls[Kcd sshgit config --global user.name "InigoID"email "inigoiri@ucm.es"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Plone git@github.com:fermoner/prpa23-1.git-practica1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls -a[Kgit clone git@github.com:fermoner/prpa-practica1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[K -acd .sshgit clone git@github.com:fermoner/prpa-practica1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd ..[Kgit clone git@github.com:fermoner/prpa-practica1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd .ssh[Kgit clone git@github.com:fermoner/prpa-practica1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd ..[K[Krm -r .ssh/unzip Descargas/ssh.zip [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit clone git@github.com:fermoner/prpa-practica1.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[34Pcd prpa-practica1/ls[Kmv ../*py .ls[Kgit add 0_procesos.pycommit -m "Se sube el fichero" git push[K'Se sube el fichero'[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[12Padd 0_procesos.py commit -m "Se ha subido este archivo"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cpush[Kadd 0_procesos.py 1_procesos.py 2_procesos.py 3_procesos.py 4_procesos.py[A]0;alumno@aula443: ~[01;32malumno@aula443[00m:[01;34m~[00m$ [C[C[C[C[25Pcommit -m "Se suben los archivos"
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cpush[Kscript multiprocessing.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cpwd[K[2Plgit add multiprocessing.txt [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[11Prm -r .ssh/ .git*git clone git@github.com:AnaLing/GIT-y-multiprocessing.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[34Pcd GIT-y-multiprocessing[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[5Ptouch 0_procesos.pygedit[C[C[C[C[C[C[C[C[C[C[C[C[C[Ctouch 1_procesos.pygedit[C[C[C[C[C[C[C[C[C[C[C[C[C[Ctouch 2_procesos.pygedit[C[C[C[C[C[C[C[C[C[C[C[C[C[Ctouch 3_procesos.pygedit[C[C[C[C[C[C[C[C[C[C[C[C[C[Ctouch 4_procesos.pygedit[C[C[C[C[C[C[C[C[C[C[C[C[C[Cit add 0_procesos.py 1_procesos.py 2_procesos.py 3_procesos.py 4_procesos.py [A]0;alumno@aula443: ~[01;32malumno@aula443[00m:[01;34m~[00m$ [C[C[C[C[21Pcommit -m "Se suben los archivos *py"
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnfig --global user.mail "analingf@ucm.es"[8Pname "AnaLing"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmmit -m "Se suben los archivos *py"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnfig --global user.email "analingf@ucm.es"[9Pname "AnaLing"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmmit -m "Se suben los archivos *py"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cpush[Kllshremote -vls[Kgit status[4Pls -almv .ssh/ ../[7Pcd ..ssh/ls[Kcd ..rm -r .ssh/mv GIT-y-multiprocessing/.ssh/ .[1P /tmp/[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit clone git@github.com:AnaLing/GIT-y-multiprocessing.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[32Pcd  GIT-y-multiprocessing/[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmv /tmp/GIT-y-multiprocessing/* .[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kgit pushrm -r .ssh .git*unzip Descargas/ssh.zip[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[11Pls -al .ssh/script multiprocessing.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kgit commit
[?2004lfatal: no es un repositorio git (ni ninguno de los directorios superiores): .git
[?2004h]0;alumno@aula443: ~[01;32malumno@aula443[00m:[01;34m~[00m$ git clone ommitlone [7mgit@github.com:AnaLing/GIT-y-multiprocessing.git[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit@github.com:AnaLing/GIT-y-multiprocessing.git
[?2004lClonando en 'GIT-y-multiprocessing'...
remote: Enumerating objects: 3, done.[K
remote: Counting objects:  33% (1/3)[Kremote: Counting objects:  66% (2/3)[Kremote: Counting objects: 100% (3/3)[Kremote: Counting objects: 100% (3/3), done.[K
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0[K
Recibiendo objetos:  33% (1/3)Recibiendo objetos:  66% (2/3)Recibiendo objetos: 100% (3/3)Recibiendo objetos: 100% (3/3), listo.
[?2004h]0;alumno@aula443: ~[01;32malumno@aula443[00m:[01;34m~[00m$ git clone git@github.com:AnaLing/GIT-y-multiprocessing.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Commit[Kscript multiprocessing.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[14Pls -al .ssh/unzip Descargas/ssh.zip[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7Prm -r .ssh .git*[8Pgit pushls[Kmv /tmp/GIT-y-multiprocessing/* .[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7Pcd  GIT-y-multiprocessing/[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit clone git@github.com:AnaLing/GIT-y-multiprocessing.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[27Pmv GIT-y-multiprocessing/ /tmp/.ssh/ .[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[21Prm -r .ssh/[6Pcd ..[3Plscd .ssh/.[Kmv .ssh/ ../[6Pls -algit statusls[Kgit remote -v[5Ppushllshcommit -m "Se suben los archivos *py"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Pnfig --global user.name "AnaLing"email "analingf@ucm.es"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7Pmmit -m "Se suben los archivos *py"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Pnfig --global user.name "AnaLing"mail "analingf@ucm.es"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[6Pmmit -m "Se suben los archivos *py"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cadd 0_procesos.py 1_procesos.py 2_procesos.py 3_procesos.py 4_procesos.py [A]0;alumno@aula443: ~[01;32malumno@aula443[00m:[01;34m~[00m$ [C[C[C[C[21Pcommit -m "Se suben los archivos *py"
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnfig --global user.mail "analingf@ucm.es"[8Pname "AnaLing"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmmit -m "Se suben los archivos *py"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnfig --global user.email "analingf@ucm.es"[9Pname "AnaLing"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmmit -m "Se suben los archivos *py"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cpush[Kllshremote -vls[Kgit status[4Pls -almv .ssh/ ../[7Pcd ..ssh/ls[Kcd ..rm -r .ssh/mv GIT-y-multiprocessing/.ssh/ .[1P /tmp/[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit clone git@github.com:AnaLing/GIT-y-multiprocessing.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[32Pcd  GIT-y-multiprocessing/[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmv /tmp/GIT-y-multiprocessing/* .[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kgit pushrm -r .ssh .git*unzip Descargas/ssh.zip[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[11Pls -al .ssh/script multiprocessing.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[16Pgit commitlone git@github.com:AnaLing/GIT-y-multiprocessing.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kgit commit
[?2004lfatal: no es un repositorio git (ni ninguno de los directorios superiores): .git
[?2004h]0;alumno@aula443: ~[01;32malumno@aula443[00m:[01;34m~[00m$ git config 
[?2004luso: git config [<opciones>]

UbicaciÃ³n del archivo de configuraciÃ³n
    --global              usar archivo de config global
    --system              usar archivo de config del sistema
    --local               usar archivo de config del repositorio
    --worktree            usar archivo de config del Ã¡rbol de trabajo
    -f, --file <archivo>  usar archivo de config especificado
    --blob <blob-id>      leer config del objeto blob suministrado

AcciÃ³n
    --get                 obtener valor: nombre [patrÃ³n de valor]
    --get-all             obtener todos los valores: clave [patrÃ³n de valor]
    --get-regexp          obtener valores para regexp: name-regex [value-pattern]
    --get-urlmatch        obtener valor especÃ­fico para el URL: secciÃ³n[.var] URL
    --replace-all         reemplazar todas las variables coincidentes: nombre valor [valor-patrÃ³n]
    --add                 agregar nueva variable: nombre valor
    --unset               eliminar una variable: nombre [patrÃ³n de valor]
    --unset-all           eliminar todas las coincidencias: nombre [patrÃ³n de valor]
    --rename-section      renombrar secciÃ³n: nombre-viejo nombre-nuevo
    --remove-section      borrar una secciÃ³n: nombre
    -l, --list            listar todo
    --fixed-value         usar la igualdad de cadenas al comparar valores con 'patrÃ³n de valor'
    -e, --edit            abrir el editor
    --get-color           encontrar el color configurado: slot [default]
    --get-colorbool       encontrar las opciones del color: slot [stdout-es-tty]

Tipo
    -t, --type <>         al valor se ha dado este tipo
    --bool                valor es "true" o "false"
    --int                 valor es un nÃºmero decimal
    --bool-or-int         valor es --bool o --int
    --bool-or-str         el valor es --bool o cadena
    --path                valor es una ruta (archivo o nombre de directorio)
    --expiry-date         valor es una fecha de caducidad

Otro
    -z, --null            terminar valores con un byte NULL
    --name-only           mostrar solo nombres de variables
    --includes            respetar directivas include en la bÃºsqueda
    --show-origin         mostrar el origen de configuraciÃ³n (archivo, stdin, blob, lÃ­nea de comandos)
    --show-scope          mostrar el scope de la configuraciÃ³n (worktree, local, global, system, command)
    --default <valor>     con --get, usar el valor por defecto cuando falta una entrada

[?2004h]0;alumno@aula443: ~[01;32malumno@aula443[00m:[01;34m~[00m$ [?2004l
exit

Script done on 2023-02-02 12:43:15+01:00 [COMMAND_EXIT_CODE="129"]
